{"expireTime":9007200843879946000,"key":"gatsby-plugin-mdx-entire-payload-f8c63369cbd6cd3a2015759da4d6a8c6-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Hi, I'm Akiff and I'm trying this out. ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":40,"offset":40},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":40,"offset":40},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":42},"end":{"line":4,"column":4,"offset":45},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This idea is inspired from ","position":{"start":{"line":6,"column":1,"offset":47},"end":{"line":6,"column":28,"offset":74},"indent":[]}},{"type":"link","title":null,"url":"https://notes.mxstbr.com/","children":[{"type":"text","value":"Max Stoiber","position":{"start":{"line":6,"column":29,"offset":75},"end":{"line":6,"column":40,"offset":86},"indent":[]}}],"position":{"start":{"line":6,"column":28,"offset":74},"end":{"line":6,"column":68,"offset":114},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":6,"column":68,"offset":114},"end":{"line":6,"column":73,"offset":119},"indent":[]}},{"type":"link","title":null,"url":"https://notes.andymatuschak.org/About_these_notes","children":[{"type":"text","value":"Andy Matuschak","position":{"start":{"line":6,"column":74,"offset":120},"end":{"line":6,"column":88,"offset":134},"indent":[]}}],"position":{"start":{"line":6,"column":73,"offset":119},"end":{"line":6,"column":140,"offset":186},"indent":[]}},{"type":"text","value":". This project is ","position":{"start":{"line":6,"column":140,"offset":186},"end":{"line":6,"column":158,"offset":204},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/aravindballa/notes.aravindballa.com/","children":[{"type":"text","value":"opensource","position":{"start":{"line":6,"column":159,"offset":205},"end":{"line":6,"column":169,"offset":215},"indent":[]}}],"position":{"start":{"line":6,"column":158,"offset":204},"end":{"line":6,"column":227,"offset":273},"indent":[]}},{"type":"text","value":", built with ","position":{"start":{"line":6,"column":227,"offset":273},"end":{"line":6,"column":240,"offset":286},"indent":[]}},{"type":"link","title":null,"url":"https://gatsbyjs.org","children":[{"type":"text","value":"Gatsby","position":{"start":{"line":6,"column":241,"offset":287},"end":{"line":6,"column":247,"offset":293},"indent":[]}}],"position":{"start":{"line":6,"column":240,"offset":286},"end":{"line":6,"column":270,"offset":316},"indent":[]}},{"type":"text","value":" and uses ","position":{"start":{"line":6,"column":270,"offset":316},"end":{"line":6,"column":280,"offset":326},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/aravindballa/gatsby-theme-andy/","children":[{"type":"text","value":"gatsby-theme-andy","position":{"start":{"line":6,"column":281,"offset":327},"end":{"line":6,"column":298,"offset":344},"indent":[]}}],"position":{"start":{"line":6,"column":280,"offset":326},"end":{"line":6,"column":351,"offset":397},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":351,"offset":397},"end":{"line":6,"column":352,"offset":398},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":47},"end":{"line":6,"column":352,"offset":398},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":9,"column":1,"offset":401},"end":{"line":9,"column":31,"offset":431},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":31,"offset":431}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi, I'm Akiff and I'm trying this out. \"), mdx(\"hr\", null), mdx(\"p\", null, \"This idea is inspired from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.mxstbr.com/\"\n  }), \"Max Stoiber\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes\"\n  }), \"Andy Matuschak\"), \". This project is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/notes.aravindballa.com/\"\n  }), \"opensource\"), \", built with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gatsbyjs.org\"\n  }), \"Gatsby\"), \" and uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/gatsby-theme-andy/\"\n  }), \"gatsby-theme-andy\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Hi, I'm Akiff and I'm trying this out. `}</p>\n    <hr></hr>\n    <p>{`This idea is inspired from `}<a parentName=\"p\" {...{\n        \"href\": \"https://notes.mxstbr.com/\"\n      }}>{`Max Stoiber`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://notes.andymatuschak.org/About_these_notes\"\n      }}>{`Andy Matuschak`}</a>{`. This project is `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/aravindballa/notes.aravindballa.com/\"\n      }}>{`opensource`}</a>{`, built with `}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsbyjs.org\"\n      }}>{`Gatsby`}</a>{` and uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/aravindballa/gatsby-theme-andy/\"\n      }}>{`gatsby-theme-andy`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}